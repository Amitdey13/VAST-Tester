'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Represents a unique identifier for an ad.
 */
var UniversalAdId = exports.UniversalAdId = function () {
  function UniversalAdId() {
    _classCallCheck(this, UniversalAdId);

    this._idRegistry = 'unknown';
    this._idValue = 'unknown';
    this._creativeIdentifier = null;
  }

  // Attribute(s).

  /**
   * The registry URL for the unique creative identifier.
   *
   * @type {string}
   */


  _createClass(UniversalAdId, [{
    key: 'idRegistry',
    get: function get() {
      return this._idRegistry;
    },
    set: function set(value) {
      this._idRegistry = value;
    }

    /**
     * A string for the unique creative identifier.
     *
     * @type {string}
     */

  }, {
    key: 'idValue',
    get: function get() {
      return this._idValue;
    },
    set: function set(value) {
      this._idValue = value;
    }

    // Content.

    /**
     * The string identifying the unique creative identifier.
     *
     * @type {string}
     */

  }, {
    key: 'creativeIdentifier',
    get: function get() {
      return this._creativeIdentifier;
    },
    set: function set(value) {
      this._creativeIdentifier = value;
    }
  }, {
    key: '$type',
    get: function get() {
      return 'UniversalAdId';
    }
  }]);

  return UniversalAdId;
}();