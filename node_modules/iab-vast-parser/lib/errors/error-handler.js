'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _errorCodes = require('./error-codes');

var _errorCodes2 = _interopRequireDefault(_errorCodes);

var _vastParserError = require('./vast-parser-error');

var _vastParserError2 = _interopRequireDefault(_vastParserError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ErrorHandler = function () {
  function ErrorHandler(strict) {
    _classCallCheck(this, ErrorHandler);

    this._strictMode = strict;
  }

  _createClass(ErrorHandler, [{
    key: 'failWithErrorCode',
    value: function failWithErrorCode(error, errorCode) {
      if (error instanceof _vastParserError2.default) {
        throw error;
      }
      throw new _vastParserError2.default(error instanceof Error ? error.message : error, errorCode);
    }
  }, {
    key: 'fail',
    value: function fail(error) {
      this.failWithErrorCode(error, _errorCodes2.default.VAST_SCHEMA_VALIDATION_ERROR);
    }
  }, {
    key: 'tryRecover',
    value: function tryRecover(error) {
      if (this._strictMode) {
        this.fail(error);
      }
    }
  }]);

  return ErrorHandler;
}();

exports.default = ErrorHandler;